Version 4.0 HI-TECH Software Intermediate Code
[v F164 `(v ~T0 @X0 1 tf1`ul ]
"12 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\builtins.h
[v __delay `JF164 ~T0 @X0 0 e ]
[p i __delay ]
"26 ./digital_keypad.h
[; ;./digital_keypad.h: 26: unsigned char read_digital_keypad(unsigned char mode);
[v _read_digital_keypad `(uc ~T0 @X0 0 ef1`uc ]
"39 ./clcd.h
[; ;./clcd.h: 39: void clcd_print(const char *str, unsigned char addr);
[v _clcd_print `(v ~T0 @X0 0 ef2`*Cuc`uc ]
"23 ./ds1307.h
[; ;./ds1307.h: 23: void get_time(unsigned char *clock_reg);
[v _get_time `(v ~T0 @X0 0 ef1`*uc ]
"13 ./variables.h
[; ;./variables.h: 13: extern unsigned char clock_reg[3], speed[3];
[v _clock_reg `uc ~T0 @X0 -> 0 `x e ]
"24 ./ds1307.h
[; ;./ds1307.h: 24: void display_time(unsigned char *clock_reg);
[v _display_time `(v ~T0 @X0 0 ef1`*uc ]
"17 ./variables.h
[; ;./variables.h: 17: extern unsigned char *event[];
[v _event `*uc ~T0 @X0 -> 0 `x e ]
"14
[; ;./variables.h: 14: extern unsigned int i;
[v _i `ui ~T0 @X0 0 e ]
"15 ./adc.h
[; ;./adc.h: 15: unsigned short read_adc(unsigned char channel);
[v _read_adc `(us ~T0 @X0 0 ef1`uc ]
"13 ./variables.h
[; ;./variables.h: 13: extern unsigned char clock_reg[3], speed[3];
[v _speed `uc ~T0 @X0 -> 0 `x e ]
"26 ./main.h
[; ;./main.h: 26: void enter_menu_option(unsigned char down_press);
[v _enter_menu_option `(v ~T0 @X0 0 ef1`uc ]
"40 ./clcd.h
[; ;./clcd.h: 40: void clcd_write(unsigned char byte, unsigned char mode);
[v _clcd_write `(v ~T0 @X0 0 ef2`uc`uc ]
"16 ./variables.h
[; ;./variables.h: 16: extern unsigned char dash_mode;
[v _dash_mode `uc ~T0 @X0 0 e ]
"15
[; ;./variables.h: 15: extern unsigned int block, clear_flag;
[v _clear_flag `ui ~T0 @X0 0 e ]
"38 ./clcd.h
[; ;./clcd.h: 38: void clcd_putch(const char data, unsigned char addr);
[v _clcd_putch `(v ~T0 @X0 0 ef2`Cuc`uc ]
"18 ./external_eeprom.h
[; ;./external_eeprom.h: 18: unsigned char read_ext_eeprom(unsigned char addr);
[v _read_ext_eeprom `(uc ~T0 @X0 0 ef1`uc ]
"20 ./variables.h
[; ;./variables.h: 20: extern unsigned int log_counter;
[v _log_counter `ui ~T0 @X0 0 e ]
"21 ./external_eeprom.h
[; ;./external_eeprom.h: 21:  void store_eeprom(void);
[v _store_eeprom `(v ~T0 @X0 0 ef ]
"39 C:\Program Files\Microchip\xc8\v2.46\pic\include\c99\string.h
[; ;C:\Program Files\Microchip\xc8\v2.46\pic\include\c99\string.h: 39: int strcmp (const char *, const char *);
[v _strcmp `(i ~T0 @X0 0 ef2`*Cuc`*Cuc ]
"33
[; ;C:\Program Files\Microchip\xc8\v2.46\pic\include\c99\string.h: 33: char *strcpy (char *restrict, const char *restrict);
[v _strcpy `(*uc ~T0 @X0 0 ef2`*uc`*Cuc ]
"19 ./variables.h
[; ;./variables.h: 19: extern char pass[5];
[v _pass `uc ~T0 @X0 -> 0 `x e ]
"19 ./external_eeprom.h
[; ;./external_eeprom.h: 19: void write_ext_eeprom(unsigned char addr, unsigned char data);
[v _write_ext_eeprom `(v ~T0 @X0 0 ef2`uc`uc ]
"18 ./uart.h
[; ;./uart.h: 18: void puts(const char *s);
[v _puts `(v ~T0 @X0 0 ef1`*Cuc ]
"34 C:\Program Files\Microchip\xc8\v2.46\pic\include\c99\string.h
[; ;C:\Program Files\Microchip\xc8\v2.46\pic\include\c99\string.h: 34: char *strncpy (char *restrict, const char *restrict, size_t);
[v _strncpy `(*uc ~T0 @X0 0 ef3`*uc`*Cuc`ui ]
"17 ./uart.h
[; ;./uart.h: 17: void putchar(unsigned char data);
[v _putchar `(v ~T0 @X0 0 ef1`uc ]
"21 ./ds1307.h
[; ;./ds1307.h: 21: void write_ds1307(unsigned char addr, unsigned char data);
[v _write_ds1307 `(v ~T0 @X0 0 ef2`uc`uc ]
"54 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC16Fxxx_DFP/1.4.149/xc8\pic\include\proc\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"7 function.c
[; ;function.c: 7: unsigned char detect_single_press() {
[v _detect_single_press `(uc ~T0 @X0 1 ef ]
{
[e :U _detect_single_press ]
[f ]
"8
[; ;function.c: 8:     static unsigned char prev_key = 0x3F;
[v F1248 `uc ~T0 @X0 1 s prev_key ]
[i F1248
-> -> 63 `i `uc
]
"9
[; ;function.c: 9:     _delay((unsigned long)((50)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"10
[; ;function.c: 10:     unsigned char key = read_digital_keypad(1);
[v _key `uc ~T0 @X0 1 a ]
[e = _key ( _read_digital_keypad (1 -> -> 1 `i `uc ]
"12
[; ;function.c: 12:     if (key != 0x3F && prev_key == 0x3F) {
[e $ ! && != -> _key `i -> 63 `i == -> F1248 `i -> 63 `i 101  ]
{
"13
[; ;function.c: 13:         prev_key = key;
[e = F1248 _key ]
"14
[; ;function.c: 14:         return key;
[e ) _key ]
[e $UE 100  ]
"15
[; ;function.c: 15:     }
}
[e :U 101 ]
"16
[; ;function.c: 16:     prev_key = key;
[e = F1248 _key ]
"17
[; ;function.c: 17:     return 0x3F;
[e ) -> -> 63 `i `uc ]
[e $UE 100  ]
"18
[; ;function.c: 18: }
[e :UE 100 ]
}
"20
[; ;function.c: 20: void update_dashboard_display() {
[v _update_dashboard_display `(v ~T0 @X0 1 ef ]
{
[e :U _update_dashboard_display ]
[f ]
"22
[; ;function.c: 22:     clcd_print("  TIME    EV  SP", (0x80 + 0));
[e ( _clcd_print (2 , :s 1C -> + -> 128 `i -> 0 `i `uc ]
"23
[; ;function.c: 23:     get_time(clock_reg);
[e ( _get_time (1 &U _clock_reg ]
"24
[; ;function.c: 24:     display_time(clock_reg);
[e ( _display_time (1 &U _clock_reg ]
"25
[; ;function.c: 25:     clcd_print(event[i], (0xC0 + 10));
[e ( _clcd_print (2 , -> *U + &U _event * -> _i `ux -> -> # *U &U _event `ui `ux `*Cuc -> + -> 192 `i -> 10 `i `uc ]
"26
[; ;function.c: 26:     unsigned short adc_val = read_adc(0x00) / 10.23;
[v _adc_val `us ~T0 @X0 1 a ]
[e = _adc_val -> / -> -> ( _read_adc (1 -> -> 0 `i `uc `ui `d .10.23 `us ]
"28
[; ;function.c: 28:     speed[0] = ((adc_val / 10) % 10) + 48;
[e = *U + &U _speed * -> -> -> 0 `i `ui `ux -> -> # *U &U _speed `ui `ux -> + % / -> _adc_val `ui -> -> 10 `i `ui -> -> 10 `i `ui -> -> 48 `i `ui `uc ]
"29
[; ;function.c: 29:     speed[1] = (adc_val % 10) + 48;
[e = *U + &U _speed * -> -> -> 1 `i `ui `ux -> -> # *U &U _speed `ui `ux -> + % -> _adc_val `ui -> -> 10 `i `ui -> -> 48 `i `ui `uc ]
"30
[; ;function.c: 30:     speed[2] = '\0';
[e = *U + &U _speed * -> -> -> 2 `i `ui `ux -> -> # *U &U _speed `ui `ux -> -> 0 `ui `uc ]
"31
[; ;function.c: 31:     clcd_print(speed, (0xC0 + 14));
[e ( _clcd_print (2 , -> &U _speed `*Cuc -> + -> 192 `i -> 14 `i `uc ]
"32
[; ;function.c: 32: }
[e :UE 102 ]
}
"34
[; ;function.c: 34: void handle_menu_navigation(unsigned char *down_press, unsigned int *long_press_counter) {
[v _handle_menu_navigation `(v ~T0 @X0 1 ef2`*uc`*ui ]
{
[e :U _handle_menu_navigation ]
[v _down_press `*uc ~T0 @X0 1 r1 ]
[v _long_press_counter `*ui ~T0 @X0 1 r2 ]
[f ]
"35
[; ;function.c: 35:     unsigned char key = detect_single_press();
[v _key `uc ~T0 @X0 1 a ]
[e = _key ( _detect_single_press ..  ]
"36
[; ;function.c: 36:     static unsigned char sw5_pressed = 0;
[v F1256 `uc ~T0 @X0 1 s sw5_pressed ]
[i F1256
-> -> 0 `i `uc
]
"37
[; ;function.c: 37:     static unsigned char sw6_pressed = 0;
[v F1257 `uc ~T0 @X0 1 s sw6_pressed ]
[i F1257
-> -> 0 `i `uc
]
"38
[; ;function.c: 38:     static unsigned int sw5_timer = 0;
[v F1258 `ui ~T0 @X0 1 s sw5_timer ]
[i F1258
-> -> 0 `i `ui
]
"39
[; ;function.c: 39:     static unsigned int sw6_timer = 0;
[v F1259 `ui ~T0 @X0 1 s sw6_timer ]
[i F1259
-> -> 0 `i `ui
]
"41
[; ;function.c: 41:     unsigned int long_press_threshold = 20;
[v _long_press_threshold `ui ~T0 @X0 1 a ]
[e = _long_press_threshold -> -> 20 `i `ui ]
"44
[; ;function.c: 44:     if (read_digital_keypad(0) == 0x2F) {
[e $ ! == -> ( _read_digital_keypad (1 -> -> 0 `i `uc `i -> 47 `i 104  ]
{
"45
[; ;function.c: 45:         sw5_pressed = 1;
[e = F1256 -> -> 1 `i `uc ]
"46
[; ;function.c: 46:         sw5_timer++;
[e ++ F1258 -> -> 1 `i `ui ]
"47
[; ;function.c: 47:     } else {
}
[e $U 105  ]
[e :U 104 ]
{
"48
[; ;function.c: 48:         if (sw5_pressed) {
[e $ ! != -> F1256 `i -> 0 `i 106  ]
{
"49
[; ;function.c: 49:             if (sw5_timer >= long_press_threshold) {
[e $ ! >= F1258 _long_press_threshold 107  ]
{
"51
[; ;function.c: 51:                 enter_menu_option(*down_press);
[e ( _enter_menu_option (1 *U _down_press ]
"52
[; ;function.c: 52:             } else {
}
[e $U 108  ]
[e :U 107 ]
{
"54
[; ;function.c: 54:                 if (*down_press > 0) {
[e $ ! > -> *U _down_press `i -> 0 `i 109  ]
{
"55
[; ;function.c: 55:                     (*down_press)--;
[e -- *U _down_press -> -> 1 `i `uc ]
"56
[; ;function.c: 56:                 } else {
}
[e $U 110  ]
[e :U 109 ]
{
"57
[; ;function.c: 57:                     *down_press = 7;
[e = *U _down_press -> -> 7 `i `uc ]
"58
[; ;function.c: 58:                 }
}
[e :U 110 ]
"59
[; ;function.c: 59:             }
}
[e :U 108 ]
"60
[; ;function.c: 60:             sw5_pressed = 0;
[e = F1256 -> -> 0 `i `uc ]
"61
[; ;function.c: 61:             sw5_timer = 0;
[e = F1258 -> -> 0 `i `ui ]
"62
[; ;function.c: 62:         }
}
[e :U 106 ]
"63
[; ;function.c: 63:     }
}
[e :U 105 ]
"66
[; ;function.c: 66:     if (read_digital_keypad(0) == 0x1F) {
[e $ ! == -> ( _read_digital_keypad (1 -> -> 0 `i `uc `i -> 31 `i 111  ]
{
"67
[; ;function.c: 67:         sw6_pressed = 1;
[e = F1257 -> -> 1 `i `uc ]
"68
[; ;function.c: 68:         sw6_timer++;
[e ++ F1259 -> -> 1 `i `ui ]
"69
[; ;function.c: 69:     } else {
}
[e $U 112  ]
[e :U 111 ]
{
"70
[; ;function.c: 70:         if (sw6_pressed) {
[e $ ! != -> F1257 `i -> 0 `i 113  ]
{
"71
[; ;function.c: 71:             if (sw6_timer >= long_press_threshold) {
[e $ ! >= F1259 _long_press_threshold 114  ]
{
"73
[; ;function.c: 73:                 clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"74
[; ;function.c: 74:                 dash_mode = 1;
[e = _dash_mode -> -> 1 `i `uc ]
"75
[; ;function.c: 75:             } else {
}
[e $U 115  ]
[e :U 114 ]
{
"77
[; ;function.c: 77:                 (*down_press)++;
[e ++ *U _down_press -> -> 1 `i `uc ]
"78
[; ;function.c: 78:                 if (*down_press > 7) {
[e $ ! > -> *U _down_press `i -> 7 `i 116  ]
{
"79
[; ;function.c: 79:                     *down_press = 0;
[e = *U _down_press -> -> 0 `i `uc ]
"80
[; ;function.c: 80:                 }
}
[e :U 116 ]
"81
[; ;function.c: 81:             }
}
[e :U 115 ]
"82
[; ;function.c: 82:             sw6_pressed = 0;
[e = F1257 -> -> 0 `i `uc ]
"83
[; ;function.c: 83:             sw6_timer = 0;
[e = F1259 -> -> 0 `i `ui ]
"84
[; ;function.c: 84:         }
}
[e :U 113 ]
"85
[; ;function.c: 85:     }
}
[e :U 112 ]
"88
[; ;function.c: 88:     if (*down_press == 0) {
[e $ ! == -> *U _down_press `i -> 0 `i 117  ]
{
"89
[; ;function.c: 89:         clcd_print("View Logs    ", (0x80 + 3));
[e ( _clcd_print (2 , :s 2C -> + -> 128 `i -> 3 `i `uc ]
"90
[; ;function.c: 90:         clcd_print("Clear Logs   ", (0xC0 + 3));
[e ( _clcd_print (2 , :s 3C -> + -> 192 `i -> 3 `i `uc ]
"91
[; ;function.c: 91:     } else if (*down_press == 2) {
}
[e $U 118  ]
[e :U 117 ]
[e $ ! == -> *U _down_press `i -> 2 `i 119  ]
{
"92
[; ;function.c: 92:         clcd_print("Clear Logs   ", (0x80 + 3));
[e ( _clcd_print (2 , :s 4C -> + -> 128 `i -> 3 `i `uc ]
"93
[; ;function.c: 93:         clcd_print("Download log ", (0xC0 + 3));
[e ( _clcd_print (2 , :s 5C -> + -> 192 `i -> 3 `i `uc ]
"94
[; ;function.c: 94:     } else if (*down_press == 4) {
}
[e $U 120  ]
[e :U 119 ]
[e $ ! == -> *U _down_press `i -> 4 `i 121  ]
{
"95
[; ;function.c: 95:         clcd_print("Download log ", (0x80 + 3));
[e ( _clcd_print (2 , :s 6C -> + -> 128 `i -> 3 `i `uc ]
"96
[; ;function.c: 96:         clcd_print("Rest Password", (0xC0 + 3));
[e ( _clcd_print (2 , :s 7C -> + -> 192 `i -> 3 `i `uc ]
"97
[; ;function.c: 97:     } else if (*down_press == 6) {
}
[e $U 122  ]
[e :U 121 ]
[e $ ! == -> *U _down_press `i -> 6 `i 123  ]
{
"98
[; ;function.c: 98:         clcd_print("Rest Password", (0x80 + 3));
[e ( _clcd_print (2 , :s 8C -> + -> 128 `i -> 3 `i `uc ]
"99
[; ;function.c: 99:         clcd_print("Reset Time   ", (0xC0 + 3));
[e ( _clcd_print (2 , :s 9C -> + -> 192 `i -> 3 `i `uc ]
"100
[; ;function.c: 100:     }
}
[e :U 123 ]
[e :U 122 ]
[e :U 120 ]
[e :U 118 ]
"103
[; ;function.c: 103:     if (*down_press % 2 == 0) {
[e $ ! == % -> *U _down_press `i -> 2 `i -> 0 `i 124  ]
{
"104
[; ;function.c: 104:         clcd_print("*", (0x80 + 1));
[e ( _clcd_print (2 , :s 10C -> + -> 128 `i -> 1 `i `uc ]
"105
[; ;function.c: 105:         clcd_print(" ", (0xC0 + 1));
[e ( _clcd_print (2 , :s 11C -> + -> 192 `i -> 1 `i `uc ]
"106
[; ;function.c: 106:     } else {
}
[e $U 125  ]
[e :U 124 ]
{
"107
[; ;function.c: 107:         clcd_print("*", (0xC0 + 1));
[e ( _clcd_print (2 , :s 12C -> + -> 192 `i -> 1 `i `uc ]
"108
[; ;function.c: 108:         clcd_print(" ", (0x80 + 1));
[e ( _clcd_print (2 , :s 13C -> + -> 128 `i -> 1 `i `uc ]
"109
[; ;function.c: 109:     }
}
[e :U 125 ]
"110
[; ;function.c: 110: }
[e :UE 103 ]
}
"116
[; ;function.c: 116: void display_logs() {
[v _display_logs `(v ~T0 @X0 1 ef ]
{
[e :U _display_logs ]
[f ]
"117
[; ;function.c: 117:     unsigned char addr = 0;
[v _addr `uc ~T0 @X0 1 a ]
[e = _addr -> -> 0 `i `uc ]
"118
[; ;function.c: 118:     unsigned char eeprom_data[12];
[v _eeprom_data `uc ~T0 @X0 -> 12 `i a ]
"119
[; ;function.c: 119:     unsigned char key;
[v _key `uc ~T0 @X0 1 a ]
"120
[; ;function.c: 120:     unsigned int index = 0;
[v _index `ui ~T0 @X0 1 a ]
[e = _index -> -> 0 `i `ui ]
"121
[; ;function.c: 121:     unsigned int long_press_counter = 0;
[v _long_press_counter `ui ~T0 @X0 1 a ]
[e = _long_press_counter -> -> 0 `i `ui ]
"122
[; ;function.c: 122:     unsigned char down_press = 0;
[v _down_press `uc ~T0 @X0 1 a ]
[e = _down_press -> -> 0 `i `uc ]
"124
[; ;function.c: 124:     while (1) {
[e :U 128 ]
{
"125
[; ;function.c: 125:         if (clear_flag == 0) {
[e $ ! == _clear_flag -> -> 0 `i `ui 130  ]
{
"126
[; ;function.c: 126:             clcd_print("# TIME     EV SP", (0x80 + 0));
[e ( _clcd_print (2 , :s 14C -> + -> 128 `i -> 0 `i `uc ]
"127
[; ;function.c: 127:             clcd_putch(index + '0', (0xC0 + 0));
[e ( _clcd_putch (2 , -> + _index -> 48 `ui `uc -> + -> 192 `i -> 0 `i `uc ]
"129
[; ;function.c: 129:             for (int j = 0; j < 12; j++) {
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $ < _j -> 12 `i 131  ]
[e $U 132  ]
[e :U 131 ]
{
"130
[; ;function.c: 130:                 eeprom_data[j] = read_ext_eeprom(addr + j);
[e = *U + &U _eeprom_data * -> -> _j `ui `ux -> -> # *U &U _eeprom_data `ui `ux ( _read_ext_eeprom (1 -> + -> _addr `i _j `uc ]
"131
[; ;function.c: 131:             }
}
[e ++ _j -> 1 `i ]
[e $ < _j -> 12 `i 131  ]
[e :U 132 ]
}
"134
[; ;function.c: 134:             for (int j = 0; j < 8; j++) {
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $ < _j -> 8 `i 134  ]
[e $U 135  ]
[e :U 134 ]
{
"135
[; ;function.c: 135:                 clcd_putch(eeprom_data[j], (0xC0 + 2 + j));
[e ( _clcd_putch (2 , -> *U + &U _eeprom_data * -> -> _j `ui `ux -> -> # *U &U _eeprom_data `ui `ux `uc -> + + -> 192 `i -> 2 `i _j `uc ]
"136
[; ;function.c: 136:             }
}
[e ++ _j -> 1 `i ]
[e $ < _j -> 8 `i 134  ]
[e :U 135 ]
}
"138
[; ;function.c: 138:             for (int j = 0; j < 2; j++) {
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $ < _j -> 2 `i 137  ]
[e $U 138  ]
[e :U 137 ]
{
"139
[; ;function.c: 139:                 clcd_putch(eeprom_data[8 + j], (0xC0 + 11 + j));
[e ( _clcd_putch (2 , -> *U + &U _eeprom_data * -> -> + -> 8 `i _j `ui `ux -> -> # *U &U _eeprom_data `ui `ux `uc -> + + -> 192 `i -> 11 `i _j `uc ]
"140
[; ;function.c: 140:             }
}
[e ++ _j -> 1 `i ]
[e $ < _j -> 2 `i 137  ]
[e :U 138 ]
}
"142
[; ;function.c: 142:             for (int j = 0; j < 2; j++) {
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $ < _j -> 2 `i 140  ]
[e $U 141  ]
[e :U 140 ]
{
"143
[; ;function.c: 143:                 clcd_putch(eeprom_data[10 + j], (0xC0 + 14 + j));
[e ( _clcd_putch (2 , -> *U + &U _eeprom_data * -> -> + -> 10 `i _j `ui `ux -> -> # *U &U _eeprom_data `ui `ux `uc -> + + -> 192 `i -> 14 `i _j `uc ]
"144
[; ;function.c: 144:             }
}
[e ++ _j -> 1 `i ]
[e $ < _j -> 2 `i 140  ]
[e :U 141 ]
}
"146
[; ;function.c: 146:             key = detect_single_press();
[e = _key ( _detect_single_press ..  ]
"147
[; ;function.c: 147:             if (key == 0x2F) {
[e $ ! == -> _key `i -> 47 `i 143  ]
{
"148
[; ;function.c: 148:                 if (index == 0) {
[e $ ! == _index -> -> 0 `i `ui 144  ]
{
"149
[; ;function.c: 149:                     index = log_counter;
[e = _index _log_counter ]
"150
[; ;function.c: 150:                 } else {
}
[e $U 145  ]
[e :U 144 ]
{
"151
[; ;function.c: 151:                     index--;
[e -- _index -> -> 1 `i `ui ]
"152
[; ;function.c: 152:                 }
}
[e :U 145 ]
"153
[; ;function.c: 153:                 addr = index * 12;
[e = _addr -> * _index -> -> 12 `i `ui `uc ]
"154
[; ;function.c: 154:             }
}
[e :U 143 ]
"155
[; ;function.c: 155:             if (key == 0x1F && index < log_counter) {
[e $ ! && == -> _key `i -> 31 `i < _index _log_counter 146  ]
{
"156
[; ;function.c: 156:                 index++;
[e ++ _index -> -> 1 `i `ui ]
"157
[; ;function.c: 157:                 if (index == log_counter)
[e $ ! == _index _log_counter 147  ]
"158
[; ;function.c: 158:                     index = 0;
[e = _index -> -> 0 `i `ui ]
[e :U 147 ]
"159
[; ;function.c: 159:                 addr = index * 12;
[e = _addr -> * _index -> -> 12 `i `ui `uc ]
"160
[; ;function.c: 160:             }
}
[e :U 146 ]
"162
[; ;function.c: 162:             if (key == 0x3E) {
[e $ ! == -> _key `i -> 62 `i 148  ]
{
"163
[; ;function.c: 163:                 i = 7;
[e = _i -> -> 7 `i `ui ]
"164
[; ;function.c: 164:                 store_eeprom();
[e ( _store_eeprom ..  ]
"166
[; ;function.c: 166:             } else if (key == 0x3D) {
}
[e $U 149  ]
[e :U 148 ]
[e $ ! == -> _key `i -> 61 `i 150  ]
{
"167
[; ;function.c: 167:                 if (i != 6) {
[e $ ! != _i -> -> 6 `i `ui 151  ]
{
"168
[; ;function.c: 168:                     i++;
[e ++ _i -> -> 1 `i `ui ]
"169
[; ;function.c: 169:                     store_eeprom();
[e ( _store_eeprom ..  ]
"171
[; ;function.c: 171:                 }
}
[e :U 151 ]
"172
[; ;function.c: 172:             } else if (key == 0x3B) {
}
[e $U 152  ]
[e :U 150 ]
[e $ ! == -> _key `i -> 59 `i 153  ]
{
"173
[; ;function.c: 173:                 if (i != 1) {
[e $ ! != _i -> -> 1 `i `ui 154  ]
{
"174
[; ;function.c: 174:                     i--;
[e -- _i -> -> 1 `i `ui ]
"175
[; ;function.c: 175:                     store_eeprom();
[e ( _store_eeprom ..  ]
"177
[; ;function.c: 177:                 }
}
[e :U 154 ]
"178
[; ;function.c: 178:             }
}
[e :U 153 ]
[e :U 152 ]
[e :U 149 ]
"181
[; ;function.c: 181:             if (read_digital_keypad(0) == 0x1F) {
[e $ ! == -> ( _read_digital_keypad (1 -> -> 0 `i `uc `i -> 31 `i 155  ]
{
"182
[; ;function.c: 182:                 long_press_counter++;
[e ++ _long_press_counter -> -> 1 `i `ui ]
"183
[; ;function.c: 183:                 if (long_press_counter > 10) {
[e $ ! > _long_press_counter -> -> 10 `i `ui 156  ]
{
"184
[; ;function.c: 184:                     clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"187
[; ;function.c: 187:                     break;
[e $U 129  ]
"188
[; ;function.c: 188:                 }
}
[e :U 156 ]
"189
[; ;function.c: 189:             }
}
[e $U 157  ]
"191
[; ;function.c: 191:             else {
[e :U 155 ]
{
"192
[; ;function.c: 192:                 long_press_counter = 0;
[e = _long_press_counter -> -> 0 `i `ui ]
"193
[; ;function.c: 193:             }
}
[e :U 157 ]
"194
[; ;function.c: 194:         } else if (clear_flag == 1) {
}
[e $U 158  ]
[e :U 130 ]
[e $ ! == _clear_flag -> -> 1 `i `ui 159  ]
{
"196
[; ;function.c: 196:             clcd_print(" No logs ", (0x80 + 0));
[e ( _clcd_print (2 , :s 15C -> + -> 128 `i -> 0 `i `uc ]
"197
[; ;function.c: 197:             clcd_print("are found!",(0xC0 + 4));
[e ( _clcd_print (2 , :s 16C -> + -> 192 `i -> 4 `i `uc ]
"199
[; ;function.c: 199:             _delay((unsigned long)((1000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"200
[; ;function.c: 200:             clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"201
[; ;function.c: 201:             dash_mode = 1;
[e = _dash_mode -> -> 1 `i `uc ]
"202
[; ;function.c: 202:             if (dash_mode) {
[e $ ! != -> _dash_mode `i -> 0 `i 160  ]
{
"203
[; ;function.c: 203:                 break;
[e $U 129  ]
"204
[; ;function.c: 204:             }
}
[e :U 160 ]
"205
[; ;function.c: 205:         }
}
[e :U 159 ]
[e :U 158 ]
"206
[; ;function.c: 206:     }
}
[e :U 127 ]
[e $U 128  ]
[e :U 129 ]
"207
[; ;function.c: 207: }
[e :UE 126 ]
}
"209
[; ;function.c: 209: void change_pass(void) {
[v _change_pass `(v ~T0 @X0 1 ef ]
{
[e :U _change_pass ]
[f ]
"210
[; ;function.c: 210:     char new_pass[5], re_pass[5];
[v _new_pass `uc ~T0 @X0 -> 5 `i a ]
[v _re_pass `uc ~T0 @X0 -> 5 `i a ]
"211
[; ;function.c: 211:     unsigned int pos = 0;
[v _pos `ui ~T0 @X0 1 a ]
[e = _pos -> -> 0 `i `ui ]
"212
[; ;function.c: 212:     unsigned int i = 5;
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 5 `i `ui ]
"213
[; ;function.c: 213:     unsigned char key;
[v _key `uc ~T0 @X0 1 a ]
"215
[; ;function.c: 215:     clcd_print(" Enter Password ", (0x80 + 0));
[e ( _clcd_print (2 , :s 17C -> + -> 128 `i -> 0 `i `uc ]
"216
[; ;function.c: 216:     clcd_print("                ", (0xC0 + 0));
[e ( _clcd_print (2 , :s 18C -> + -> 192 `i -> 0 `i `uc ]
"219
[; ;function.c: 219:     while (pos < 4) {
[e $U 162  ]
[e :U 163 ]
{
"220
[; ;function.c: 220:         key = detect_single_press();
[e = _key ( _detect_single_press ..  ]
"221
[; ;function.c: 221:         _delay((unsigned long)((20)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"222
[; ;function.c: 222:         if (key == 0x2F || key == 0x1F) {
[e $ ! || == -> _key `i -> 47 `i == -> _key `i -> 31 `i 165  ]
{
"223
[; ;function.c: 223:             new_pass[pos] = (key == 0x2F) ? '1' : '0';
[e = *U + &U _new_pass * -> _pos `ux -> -> # *U &U _new_pass `ui `ux -> ? == -> _key `i -> 47 `i : -> 49 `ui -> 48 `ui `uc ]
"224
[; ;function.c: 224:             clcd_putch('*', (0xC0 + i));
[e ( _clcd_putch (2 , -> -> 42 `ui `uc -> + -> -> 192 `i `ui _i `uc ]
"225
[; ;function.c: 225:             i++;
[e ++ _i -> -> 1 `i `ui ]
"226
[; ;function.c: 226:             pos++;
[e ++ _pos -> -> 1 `i `ui ]
"227
[; ;function.c: 227:         }
}
[e :U 165 ]
"228
[; ;function.c: 228:     }
}
[e :U 162 ]
"219
[; ;function.c: 219:     while (pos < 4) {
[e $ < _pos -> -> 4 `i `ui 163  ]
[e :U 164 ]
"229
[; ;function.c: 229:     new_pass[4] = '\0';
[e = *U + &U _new_pass * -> -> -> 4 `i `ui `ux -> -> # *U &U _new_pass `ui `ux -> -> 0 `ui `uc ]
"231
[; ;function.c: 231:     pos = 0;
[e = _pos -> -> 0 `i `ui ]
"232
[; ;function.c: 232:     i = 5;
[e = _i -> -> 5 `i `ui ]
"234
[; ;function.c: 234:     clcd_print("ReEnter Password", (0x80 + 0));
[e ( _clcd_print (2 , :s 19C -> + -> 128 `i -> 0 `i `uc ]
"235
[; ;function.c: 235:     clcd_print("                ", (0xC0 + 0));
[e ( _clcd_print (2 , :s 20C -> + -> 192 `i -> 0 `i `uc ]
"238
[; ;function.c: 238:     while (pos < 4) {
[e $U 166  ]
[e :U 167 ]
{
"239
[; ;function.c: 239:         key = detect_single_press();
[e = _key ( _detect_single_press ..  ]
"240
[; ;function.c: 240:         _delay((unsigned long)((20)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"241
[; ;function.c: 241:         if (key == 0x2F || key == 0x1F) {
[e $ ! || == -> _key `i -> 47 `i == -> _key `i -> 31 `i 169  ]
{
"242
[; ;function.c: 242:             re_pass[pos] = (key == 0x2F) ? '1' : '0';
[e = *U + &U _re_pass * -> _pos `ux -> -> # *U &U _re_pass `ui `ux -> ? == -> _key `i -> 47 `i : -> 49 `ui -> 48 `ui `uc ]
"243
[; ;function.c: 243:             clcd_putch('*', (0xC0 + i));
[e ( _clcd_putch (2 , -> -> 42 `ui `uc -> + -> -> 192 `i `ui _i `uc ]
"244
[; ;function.c: 244:             i++;
[e ++ _i -> -> 1 `i `ui ]
"245
[; ;function.c: 245:             pos++;
[e ++ _pos -> -> 1 `i `ui ]
"246
[; ;function.c: 246:         }
}
[e :U 169 ]
"247
[; ;function.c: 247:     }
}
[e :U 166 ]
"238
[; ;function.c: 238:     while (pos < 4) {
[e $ < _pos -> -> 4 `i `ui 167  ]
[e :U 168 ]
"248
[; ;function.c: 248:     re_pass[4] = '\0';
[e = *U + &U _re_pass * -> -> -> 4 `i `ui `ux -> -> # *U &U _re_pass `ui `ux -> -> 0 `ui `uc ]
"251
[; ;function.c: 251:     if (strcmp(new_pass, re_pass) == 0) {
[e $ ! == ( _strcmp (2 , -> &U _new_pass `*Cuc -> &U _re_pass `*Cuc -> 0 `i 170  ]
{
"252
[; ;function.c: 252:         strcpy(pass, new_pass);
[e ( _strcpy (2 , &U _pass -> &U _new_pass `*Cuc ]
"253
[; ;function.c: 253:         for (int addr = 125; addr < 129; addr++) {
{
[v _addr `i ~T0 @X0 1 a ]
[e = _addr -> 125 `i ]
[e $ < _addr -> 129 `i 171  ]
[e $U 172  ]
[e :U 171 ]
{
"254
[; ;function.c: 254:             write_ext_eeprom(addr, new_pass[addr - 125]);
[e ( _write_ext_eeprom (2 , -> _addr `uc -> *U + &U _new_pass * -> -> - _addr -> 125 `i `ui `ux -> -> # *U &U _new_pass `ui `ux `uc ]
"255
[; ;function.c: 255:         }
}
[e ++ _addr -> 1 `i ]
[e $ < _addr -> 129 `i 171  ]
[e :U 172 ]
}
"256
[; ;function.c: 256:         clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"257
[; ;function.c: 257:         clcd_print("Password is", (0x80 + 2));
[e ( _clcd_print (2 , :s 21C -> + -> 128 `i -> 2 `i `uc ]
"258
[; ;function.c: 258:         clcd_print("Changed", (0xC0 + 4));
[e ( _clcd_print (2 , :s 22C -> + -> 192 `i -> 4 `i `uc ]
"259
[; ;function.c: 259:     } else {
}
[e $U 174  ]
[e :U 170 ]
{
"260
[; ;function.c: 260:         clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"261
[; ;function.c: 261:         clcd_print("Password", (0x80 + 3));
[e ( _clcd_print (2 , :s 23C -> + -> 128 `i -> 3 `i `uc ]
"262
[; ;function.c: 262:         clcd_print("Mismatch", (0xC0 + 3));
[e ( _clcd_print (2 , :s 24C -> + -> 192 `i -> 3 `i `uc ]
"263
[; ;function.c: 263:     }
}
[e :U 174 ]
"264
[; ;function.c: 264:     _delay((unsigned long)((1000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"265
[; ;function.c: 265:     clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"266
[; ;function.c: 266:     dash_mode = 1;
[e = _dash_mode -> -> 1 `i `uc ]
"268
[; ;function.c: 268: }
[e :UE 161 ]
}
"270
[; ;function.c: 270: void download_log() {
[v _download_log `(v ~T0 @X0 1 ef ]
{
[e :U _download_log ]
[f ]
"271
[; ;function.c: 271:     unsigned char eeprom_data[13];
[v _eeprom_data `uc ~T0 @X0 -> 13 `i a ]
"272
[; ;function.c: 272:     unsigned char addr = 0;
[v _addr `uc ~T0 @X0 1 a ]
[e = _addr -> -> 0 `i `uc ]
"273
[; ;function.c: 273:     unsigned int log_index = 0;
[v _log_index `ui ~T0 @X0 1 a ]
[e = _log_index -> -> 0 `i `ui ]
"276
[; ;function.c: 276:     puts("SR.no.  Time      Gear  Speed\n\r");
[e ( _puts (1 :s 25C ]
"279
[; ;function.c: 279:     while (log_index < log_counter) {
[e $U 176  ]
[e :U 177 ]
{
"281
[; ;function.c: 281:         for (int j = 0; j < 12; j++) {
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $ < _j -> 12 `i 179  ]
[e $U 180  ]
[e :U 179 ]
{
"282
[; ;function.c: 282:             eeprom_data[j] = read_ext_eeprom(addr + j);
[e = *U + &U _eeprom_data * -> -> _j `ui `ux -> -> # *U &U _eeprom_data `ui `ux ( _read_ext_eeprom (1 -> + -> _addr `i _j `uc ]
"283
[; ;function.c: 283:         }
}
[e ++ _j -> 1 `i ]
[e $ < _j -> 12 `i 179  ]
[e :U 180 ]
}
"286
[; ;function.c: 286:         eeprom_data[12] = '\0';
[e = *U + &U _eeprom_data * -> -> -> 12 `i `ui `ux -> -> # *U &U _eeprom_data `ui `ux -> -> 0 `ui `uc ]
"290
[; ;function.c: 290:         char time[9], gear[3], speed[3];
[v _time `uc ~T0 @X0 -> 9 `i a ]
[v _gear `uc ~T0 @X0 -> 3 `i a ]
[v _speed `uc ~T0 @X0 -> 3 `i a ]
"291
[; ;function.c: 291:         strncpy(time, eeprom_data, 8);
[e ( _strncpy (3 , , &U _time -> &U _eeprom_data `*Cuc -> -> 8 `i `ui ]
"292
[; ;function.c: 292:         time[8] = '\0';
[e = *U + &U _time * -> -> -> 8 `i `ui `ux -> -> # *U &U _time `ui `ux -> -> 0 `ui `uc ]
"293
[; ;function.c: 293:         strncpy(gear, eeprom_data + 8, 2);
[e ( _strncpy (3 , , &U _gear -> + &U _eeprom_data * -> -> 8 `i `x -> -> # *U &U _eeprom_data `i `x `*Cuc -> -> 2 `i `ui ]
"294
[; ;function.c: 294:         gear[2] = '\0';
[e = *U + &U _gear * -> -> -> 2 `i `ui `ux -> -> # *U &U _gear `ui `ux -> -> 0 `ui `uc ]
"295
[; ;function.c: 295:         strncpy(speed, eeprom_data + 10, 2);
[e ( _strncpy (3 , , &U _speed -> + &U _eeprom_data * -> -> 10 `i `x -> -> # *U &U _eeprom_data `i `x `*Cuc -> -> 2 `i `ui ]
"296
[; ;function.c: 296:         speed[2] = '\0';
[e = *U + &U _speed * -> -> -> 2 `i `ui `ux -> -> # *U &U _speed `ui `ux -> -> 0 `ui `uc ]
"299
[; ;function.c: 299:         if (log_index < 10) {
[e $ ! < _log_index -> -> 10 `i `ui 182  ]
{
"300
[; ;function.c: 300:             putchar(log_index + '0');
[e ( _putchar (1 -> + _log_index -> 48 `ui `uc ]
"301
[; ;function.c: 301:             puts(".      ");
[e ( _puts (1 :s 26C ]
"302
[; ;function.c: 302:         }
}
[e :U 182 ]
"303
[; ;function.c: 303:         puts(time);
[e ( _puts (1 -> &U _time `*Cuc ]
"304
[; ;function.c: 304:         puts("   ");
[e ( _puts (1 :s 27C ]
"305
[; ;function.c: 305:         puts(gear);
[e ( _puts (1 -> &U _gear `*Cuc ]
"306
[; ;function.c: 306:         puts("     ");
[e ( _puts (1 :s 28C ]
"307
[; ;function.c: 307:         puts(speed);
[e ( _puts (1 -> &U _speed `*Cuc ]
"308
[; ;function.c: 308:         putchar('\r');
[e ( _putchar (1 -> -> 13 `ui `uc ]
"309
[; ;function.c: 309:         putchar('\n');
[e ( _putchar (1 -> -> 10 `ui `uc ]
"311
[; ;function.c: 311:         addr += 12;
[e =+ _addr -> -> 12 `i `uc ]
"312
[; ;function.c: 312:         log_index++;
[e ++ _log_index -> -> 1 `i `ui ]
"313
[; ;function.c: 313:     }
}
[e :U 176 ]
"279
[; ;function.c: 279:     while (log_index < log_counter) {
[e $ < _log_index _log_counter 177  ]
[e :U 178 ]
"316
[; ;function.c: 316:     puts("Log download complete.\r\n");
[e ( _puts (1 :s 29C ]
"317
[; ;function.c: 317: }
[e :UE 175 ]
}
"320
[; ;function.c: 320: void change_time(void) {
[v _change_time `(v ~T0 @X0 1 ef ]
{
[e :U _change_time ]
[f ]
"321
[; ;function.c: 321:     unsigned char key;
[v _key `uc ~T0 @X0 1 a ]
"322
[; ;function.c: 322:     unsigned char new_time[3];
[v _new_time `uc ~T0 @X0 -> 3 `i a ]
"323
[; ;function.c: 323:     unsigned char blink_pos = 0;
[v _blink_pos `uc ~T0 @X0 1 a ]
[e = _blink_pos -> -> 0 `i `uc ]
"324
[; ;function.c: 324:     unsigned char blink = 0;
[v _blink `uc ~T0 @X0 1 a ]
[e = _blink -> -> 0 `i `uc ]
"325
[; ;function.c: 325:     unsigned int wait = 0;
[v _wait `ui ~T0 @X0 1 a ]
[e = _wait -> -> 0 `i `ui ]
"326
[; ;function.c: 326:     unsigned char one_time = 1;
[v _one_time `uc ~T0 @X0 1 a ]
[e = _one_time -> -> 1 `i `uc ]
"327
[; ;function.c: 327:     unsigned char long_press_counter = 0;
[v _long_press_counter `uc ~T0 @X0 1 a ]
[e = _long_press_counter -> -> 0 `i `uc ]
"329
[; ;function.c: 329:     clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"330
[; ;function.c: 330:     _delay((unsigned long)((500)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"332
[; ;function.c: 332:     clcd_print("Time (HH:MM:SS)", (0x80 + 0));
[e ( _clcd_print (2 , :s 30C -> + -> 128 `i -> 0 `i `uc ]
"334
[; ;function.c: 334:     while (1) {
[e :U 185 ]
{
"335
[; ;function.c: 335:         key = detect_single_press();
[e = _key ( _detect_single_press ..  ]
"337
[; ;function.c: 337:         if (one_time) {
[e $ ! != -> _one_time `i -> 0 `i 187  ]
{
"338
[; ;function.c: 338:             one_time = 0;
[e = _one_time -> -> 0 `i `uc ]
"339
[; ;function.c: 339:             get_time(clock_reg);
[e ( _get_time (1 &U _clock_reg ]
"341
[; ;function.c: 341:             new_time[0] = ((clock_reg[0] >> 4) & 0x03) * 10 + (clock_reg[0] & 0x0F);
[e = *U + &U _new_time * -> -> -> 0 `i `ui `ux -> -> # *U &U _new_time `ui `ux -> + * & >> -> *U + &U _clock_reg * -> -> -> 0 `i `ui `ux -> -> # *U &U _clock_reg `ui `ux `i -> 4 `i -> 3 `i -> 10 `i & -> *U + &U _clock_reg * -> -> -> 0 `i `ui `ux -> -> # *U &U _clock_reg `ui `ux `i -> 15 `i `uc ]
"342
[; ;function.c: 342:             new_time[1] = ((clock_reg[1] >> 4) & 0x07) * 10 + (clock_reg[1] & 0x0F);
[e = *U + &U _new_time * -> -> -> 1 `i `ui `ux -> -> # *U &U _new_time `ui `ux -> + * & >> -> *U + &U _clock_reg * -> -> -> 1 `i `ui `ux -> -> # *U &U _clock_reg `ui `ux `i -> 4 `i -> 7 `i -> 10 `i & -> *U + &U _clock_reg * -> -> -> 1 `i `ui `ux -> -> # *U &U _clock_reg `ui `ux `i -> 15 `i `uc ]
"343
[; ;function.c: 343:             new_time[2] = ((clock_reg[2] >> 4) & 0x07) * 10 + (clock_reg[2] & 0x0F);
[e = *U + &U _new_time * -> -> -> 2 `i `ui `ux -> -> # *U &U _new_time `ui `ux -> + * & >> -> *U + &U _clock_reg * -> -> -> 2 `i `ui `ux -> -> # *U &U _clock_reg `ui `ux `i -> 4 `i -> 7 `i -> 10 `i & -> *U + &U _clock_reg * -> -> -> 2 `i `ui `ux -> -> # *U &U _clock_reg `ui `ux `i -> 15 `i `uc ]
"344
[; ;function.c: 344:         }
}
[e :U 187 ]
"347
[; ;function.c: 347:         if (key == 0x2F) {
[e $ ! == -> _key `i -> 47 `i 188  ]
{
"348
[; ;function.c: 348:             new_time[blink_pos]++;
[e ++ *U + &U _new_time * -> _blink_pos `ux -> -> # *U &U _new_time `ui `ux -> -> 1 `i `uc ]
"349
[; ;function.c: 349:             if (blink_pos == 0 && new_time[blink_pos] > 23)
[e $ ! && == -> _blink_pos `i -> 0 `i > -> *U + &U _new_time * -> _blink_pos `ux -> -> # *U &U _new_time `ui `ux `i -> 23 `i 189  ]
"350
[; ;function.c: 350:                 new_time[blink_pos] = 0;
[e = *U + &U _new_time * -> _blink_pos `ux -> -> # *U &U _new_time `ui `ux -> -> 0 `i `uc ]
[e $U 190  ]
"351
[; ;function.c: 351:             else if ((blink_pos == 1 || blink_pos == 2) && new_time[blink_pos] > 59)
[e :U 189 ]
[e $ ! && || == -> _blink_pos `i -> 1 `i == -> _blink_pos `i -> 2 `i > -> *U + &U _new_time * -> _blink_pos `ux -> -> # *U &U _new_time `ui `ux `i -> 59 `i 191  ]
"352
[; ;function.c: 352:                 new_time[blink_pos] = 0;
[e = *U + &U _new_time * -> _blink_pos `ux -> -> # *U &U _new_time `ui `ux -> -> 0 `i `uc ]
[e :U 191 ]
[e :U 190 ]
"353
[; ;function.c: 353:         } else if (key == 0x1F) {
}
[e $U 192  ]
[e :U 188 ]
[e $ ! == -> _key `i -> 31 `i 193  ]
{
"354
[; ;function.c: 354:             blink_pos = (blink_pos + 1) % 3;
[e = _blink_pos -> % + -> _blink_pos `i -> 1 `i -> 3 `i `uc ]
"355
[; ;function.c: 355:         }
}
[e :U 193 ]
[e :U 192 ]
"358
[; ;function.c: 358:         if (read_digital_keypad(0) == 0x1F) {
[e $ ! == -> ( _read_digital_keypad (1 -> -> 0 `i `uc `i -> 31 `i 194  ]
{
"359
[; ;function.c: 359:             long_press_counter++;
[e ++ _long_press_counter -> -> 1 `i `uc ]
"360
[; ;function.c: 360:             _delay((unsigned long)((10)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"361
[; ;function.c: 361:             if (long_press_counter > 100) {
[e $ ! > -> _long_press_counter `i -> 100 `i 195  ]
{
"363
[; ;function.c: 363:                 unsigned char dummy;
[v _dummy `uc ~T0 @X0 1 a ]
"365
[; ;function.c: 365:                 dummy = ((new_time[0] / 10) << 4) | (new_time[0] % 10);
[e = _dummy -> | << / -> *U + &U _new_time * -> -> -> 0 `i `ui `ux -> -> # *U &U _new_time `ui `ux `i -> 10 `i -> 4 `i % -> *U + &U _new_time * -> -> -> 0 `i `ui `ux -> -> # *U &U _new_time `ui `ux `i -> 10 `i `uc ]
"366
[; ;function.c: 366:                 write_ds1307(0x02, dummy);
[e ( _write_ds1307 (2 , -> -> 2 `i `uc _dummy ]
"368
[; ;function.c: 368:                 dummy = ((new_time[1] / 10) << 4) | (new_time[1] % 10);
[e = _dummy -> | << / -> *U + &U _new_time * -> -> -> 1 `i `ui `ux -> -> # *U &U _new_time `ui `ux `i -> 10 `i -> 4 `i % -> *U + &U _new_time * -> -> -> 1 `i `ui `ux -> -> # *U &U _new_time `ui `ux `i -> 10 `i `uc ]
"369
[; ;function.c: 369:                 write_ds1307(0x01, dummy);
[e ( _write_ds1307 (2 , -> -> 1 `i `uc _dummy ]
"371
[; ;function.c: 371:                 dummy = ((new_time[2] / 10) << 4) | (new_time[2] % 10);
[e = _dummy -> | << / -> *U + &U _new_time * -> -> -> 2 `i `ui `ux -> -> # *U &U _new_time `ui `ux `i -> 10 `i -> 4 `i % -> *U + &U _new_time * -> -> -> 2 `i `ui `ux -> -> # *U &U _new_time `ui `ux `i -> 10 `i `uc ]
"372
[; ;function.c: 372:                 write_ds1307(0x00, dummy);
[e ( _write_ds1307 (2 , -> -> 0 `i `uc _dummy ]
"374
[; ;function.c: 374:                 clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"375
[; ;function.c: 375:                 clcd_print("Time changed", (0x80 + 2));
[e ( _clcd_print (2 , :s 31C -> + -> 128 `i -> 2 `i `uc ]
"376
[; ;function.c: 376:                 clcd_print("Successfully", (0xC0 + 2));
[e ( _clcd_print (2 , :s 32C -> + -> 192 `i -> 2 `i `uc ]
"377
[; ;function.c: 377:                 _delay((unsigned long)((1000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"378
[; ;function.c: 378:                 clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"379
[; ;function.c: 379:                 dash_mode = 1;
[e = _dash_mode -> -> 1 `i `uc ]
"380
[; ;function.c: 380:                 return;
[e $UE 183  ]
"381
[; ;function.c: 381:             }
}
[e :U 195 ]
"382
[; ;function.c: 382:         } else {
}
[e $U 196  ]
[e :U 194 ]
{
"383
[; ;function.c: 383:             long_press_counter = 0;
[e = _long_press_counter -> -> 0 `i `uc ]
"384
[; ;function.c: 384:         }
}
[e :U 196 ]
"387
[; ;function.c: 387:         if (wait++ == 15) {
[e $ ! == ++ _wait -> -> 1 `i `ui -> -> 15 `i `ui 197  ]
{
"388
[; ;function.c: 388:             wait = 0;
[e = _wait -> -> 0 `i `ui ]
"389
[; ;function.c: 389:             blink = !blink;
[e = _blink -> -> ! != -> _blink `i -> 0 `i `i `uc ]
"392
[; ;function.c: 392:             clcd_putch((new_time[0] / 10) + '0', (0xC0 + 0));
[e ( _clcd_putch (2 , -> + -> / -> *U + &U _new_time * -> -> -> 0 `i `ui `ux -> -> # *U &U _new_time `ui `ux `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 0 `i `uc ]
"393
[; ;function.c: 393:             clcd_putch((new_time[0] % 10) + '0', (0xC0 + 1));
[e ( _clcd_putch (2 , -> + -> % -> *U + &U _new_time * -> -> -> 0 `i `ui `ux -> -> # *U &U _new_time `ui `ux `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 1 `i `uc ]
"394
[; ;function.c: 394:             clcd_putch(':', (0xC0 + 2));
[e ( _clcd_putch (2 , -> -> 58 `ui `uc -> + -> 192 `i -> 2 `i `uc ]
"395
[; ;function.c: 395:             clcd_putch((new_time[1] / 10) + '0', (0xC0 + 3));
[e ( _clcd_putch (2 , -> + -> / -> *U + &U _new_time * -> -> -> 1 `i `ui `ux -> -> # *U &U _new_time `ui `ux `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 3 `i `uc ]
"396
[; ;function.c: 396:             clcd_putch((new_time[1] % 10) + '0', (0xC0 + 4));
[e ( _clcd_putch (2 , -> + -> % -> *U + &U _new_time * -> -> -> 1 `i `ui `ux -> -> # *U &U _new_time `ui `ux `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 4 `i `uc ]
"397
[; ;function.c: 397:             clcd_putch(':', (0xC0 + 5));
[e ( _clcd_putch (2 , -> -> 58 `ui `uc -> + -> 192 `i -> 5 `i `uc ]
"398
[; ;function.c: 398:             clcd_putch((new_time[2] / 10) + '0', (0xC0 + 6));
[e ( _clcd_putch (2 , -> + -> / -> *U + &U _new_time * -> -> -> 2 `i `ui `ux -> -> # *U &U _new_time `ui `ux `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 6 `i `uc ]
"399
[; ;function.c: 399:             clcd_putch((new_time[2] % 10) + '0', (0xC0 + 7));
[e ( _clcd_putch (2 , -> + -> % -> *U + &U _new_time * -> -> -> 2 `i `ui `ux -> -> # *U &U _new_time `ui `ux `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 7 `i `uc ]
"401
[; ;function.c: 401:             if (blink) {
[e $ ! != -> _blink `i -> 0 `i 198  ]
{
"402
[; ;function.c: 402:                 switch (blink_pos) {
[e $U 200  ]
{
"403
[; ;function.c: 403:                     case 0:
[e :U 201 ]
"404
[; ;function.c: 404:                         clcd_print("  ", (0xC0 + 0));
[e ( _clcd_print (2 , :s 33C -> + -> 192 `i -> 0 `i `uc ]
"405
[; ;function.c: 405:                         break;
[e $U 199  ]
"406
[; ;function.c: 406:                     case 1:
[e :U 202 ]
"407
[; ;function.c: 407:                         clcd_print("  ", (0xC0 + 3));
[e ( _clcd_print (2 , :s 34C -> + -> 192 `i -> 3 `i `uc ]
"408
[; ;function.c: 408:                         break;
[e $U 199  ]
"409
[; ;function.c: 409:                     case 2:
[e :U 203 ]
"410
[; ;function.c: 410:                         clcd_print("  ", (0xC0 + 6));
[e ( _clcd_print (2 , :s 35C -> + -> 192 `i -> 6 `i `uc ]
"411
[; ;function.c: 411:                         break;
[e $U 199  ]
"412
[; ;function.c: 412:                 }
}
[e $U 199  ]
[e :U 200 ]
[e [\ _blink_pos , $ -> 0 `i 201
 , $ -> 1 `i 202
 , $ -> 2 `i 203
 199 ]
[e :U 199 ]
"413
[; ;function.c: 413:             }
}
[e :U 198 ]
"414
[; ;function.c: 414:         }
}
[e :U 197 ]
"415
[; ;function.c: 415:     }
}
[e :U 184 ]
[e $U 185  ]
[e :U 186 ]
"416
[; ;function.c: 416: }
[e :UE 183 ]
}
"424
[; ;function.c: 424: void enter_menu_option(unsigned char down_press) {
[v _enter_menu_option `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _enter_menu_option ]
[v _down_press `uc ~T0 @X0 1 r1 ]
[f ]
"425
[; ;function.c: 425:     clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"426
[; ;function.c: 426:     _delay((unsigned long)((500)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"428
[; ;function.c: 428:     if (down_press == 0) {
[e $ ! == -> _down_press `i -> 0 `i 205  ]
{
"431
[; ;function.c: 431:         display_logs();
[e ( _display_logs ..  ]
"435
[; ;function.c: 435:     } else if (down_press == 1 || down_press == 2) {
}
[e $U 206  ]
[e :U 205 ]
[e $ ! || == -> _down_press `i -> 1 `i == -> _down_press `i -> 2 `i 207  ]
{
"437
[; ;function.c: 437:         clear_flag = 1;
[e = _clear_flag -> -> 1 `i `ui ]
"438
[; ;function.c: 438:         log_counter = 0;
[e = _log_counter -> -> 0 `i `ui ]
"440
[; ;function.c: 440:         clcd_print("logs cleared ", (0x80 + 2));
[e ( _clcd_print (2 , :s 36C -> + -> 128 `i -> 2 `i `uc ]
"441
[; ;function.c: 441:         _delay((unsigned long)((1000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"442
[; ;function.c: 442:         dash_mode = 1;
[e = _dash_mode -> -> 1 `i `uc ]
"443
[; ;function.c: 443:     }
}
[e $U 208  ]
"444
[; ;function.c: 444:     else if (down_press == 3 || down_press == 4) {
[e :U 207 ]
[e $ ! || == -> _down_press `i -> 3 `i == -> _down_press `i -> 4 `i 209  ]
{
"445
[; ;function.c: 445:         clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"446
[; ;function.c: 446:         download_log();
[e ( _download_log ..  ]
"447
[; ;function.c: 447:         clcd_print("logs downloaded", (0x80 + 0));
[e ( _clcd_print (2 , :s 37C -> + -> 128 `i -> 0 `i `uc ]
"448
[; ;function.c: 448:         clcd_print("successfully", (0xC0 + 0));
[e ( _clcd_print (2 , :s 38C -> + -> 192 `i -> 0 `i `uc ]
"449
[; ;function.c: 449:         _delay((unsigned long)((1000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"450
[; ;function.c: 450:         clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"451
[; ;function.c: 451:         dash_mode = 1;
[e = _dash_mode -> -> 1 `i `uc ]
"453
[; ;function.c: 453:     } else if (down_press == 5 || down_press == 6) {
}
[e $U 210  ]
[e :U 209 ]
[e $ ! || == -> _down_press `i -> 5 `i == -> _down_press `i -> 6 `i 211  ]
{
"454
[; ;function.c: 454:         change_pass();
[e ( _change_pass ..  ]
"455
[; ;function.c: 455:     } else if (down_press == 7) {
}
[e $U 212  ]
[e :U 211 ]
[e $ ! == -> _down_press `i -> 7 `i 213  ]
{
"456
[; ;function.c: 456:          change_time();
[e ( _change_time ..  ]
"457
[; ;function.c: 457: }
}
[e :U 213 ]
[e :U 212 ]
[e :U 210 ]
[e :U 208 ]
[e :U 206 ]
"458
[; ;function.c: 458: }
[e :UE 204 ]
}
"460
[; ;function.c: 460: int enter_password(char *pass, unsigned int *attempt) {
[v _enter_password `(i ~T0 @X0 1 ef2`*uc`*ui ]
{
[e :U _enter_password ]
[v _pass `*uc ~T0 @X0 1 r1 ]
[v _attempt `*ui ~T0 @X0 1 r2 ]
[f ]
[v F1301 `uc ~T0 @X0 -> 5 `i s ]
[i F1301
:U ..
"461
[; ;function.c: 461:     unsigned char usr_pass[5] = {0};
-> -> 0 `i `uc
..
]
[v _usr_pass `uc ~T0 @X0 -> 5 `i a ]
[e = _usr_pass F1301 ]
"462
[; ;function.c: 462:     unsigned int pos = 0;
[v _pos `ui ~T0 @X0 1 a ]
[e = _pos -> -> 0 `i `ui ]
"463
[; ;function.c: 463:     unsigned int i = 5;
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 5 `i `ui ]
"464
[; ;function.c: 464:     unsigned char key;
[v _key `uc ~T0 @X0 1 a ]
"466
[; ;function.c: 466:     clcd_print(" Enter Password ", (0x80 + 0));
[e ( _clcd_print (2 , :s 39C -> + -> 128 `i -> 0 `i `uc ]
"467
[; ;function.c: 467:     clcd_print("                ", (0xC0 + 0));
[e ( _clcd_print (2 , :s 40C -> + -> 192 `i -> 0 `i `uc ]
"470
[; ;function.c: 470:     while (pos < 4) {
[e $U 215  ]
[e :U 216 ]
{
"471
[; ;function.c: 471:         key = detect_single_press();
[e = _key ( _detect_single_press ..  ]
"472
[; ;function.c: 472:         _delay((unsigned long)((50)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"473
[; ;function.c: 473:         if (key == 0x2F || key == 0x1F) {
[e $ ! || == -> _key `i -> 47 `i == -> _key `i -> 31 `i 218  ]
{
"474
[; ;function.c: 474:             usr_pass[pos] = (key == 0x2F) ? '1' : '0';
[e = *U + &U _usr_pass * -> _pos `ux -> -> # *U &U _usr_pass `ui `ux -> ? == -> _key `i -> 47 `i : -> 49 `ui -> 48 `ui `uc ]
"475
[; ;function.c: 475:             clcd_putch('*', (0xC0 + i));
[e ( _clcd_putch (2 , -> -> 42 `ui `uc -> + -> -> 192 `i `ui _i `uc ]
"476
[; ;function.c: 476:             i++;
[e ++ _i -> -> 1 `i `ui ]
"477
[; ;function.c: 477:             pos++;
[e ++ _pos -> -> 1 `i `ui ]
"478
[; ;function.c: 478:         }
}
[e :U 218 ]
"479
[; ;function.c: 479:     }
}
[e :U 215 ]
"470
[; ;function.c: 470:     while (pos < 4) {
[e $ < _pos -> -> 4 `i `ui 216  ]
[e :U 217 ]
"481
[; ;function.c: 481:     usr_pass[4] = '\0';
[e = *U + &U _usr_pass * -> -> -> 4 `i `ui `ux -> -> # *U &U _usr_pass `ui `ux -> -> 0 `ui `uc ]
"484
[; ;function.c: 484:     if (strcmp(usr_pass, pass) == 0) {
[e $ ! == ( _strcmp (2 , -> &U _usr_pass `*Cuc -> _pass `*Cuc -> 0 `i 219  ]
{
"485
[; ;function.c: 485:         clcd_print("Correct password", (0x80 + 0));
[e ( _clcd_print (2 , :s 41C -> + -> 128 `i -> 0 `i `uc ]
"486
[; ;function.c: 486:         return 1;
[e ) -> 1 `i ]
[e $UE 214  ]
"487
[; ;function.c: 487:     } else {
}
[e $U 220  ]
[e :U 219 ]
{
"488
[; ;function.c: 488:         (*attempt)--;
[e -- *U _attempt -> -> 1 `i `ui ]
"489
[; ;function.c: 489:         clcd_print("Wrong password ", (0x80 + 0));
[e ( _clcd_print (2 , :s 42C -> + -> 128 `i -> 0 `i `uc ]
"490
[; ;function.c: 490:         _delay((unsigned long)((1000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"491
[; ;function.c: 491:         clcd_print("                ", (0x80 + 0));
[e ( _clcd_print (2 , :s 43C -> + -> 128 `i -> 0 `i `uc ]
"492
[; ;function.c: 492:         if (*attempt > 0) {
[e $ ! > *U _attempt -> -> 0 `i `ui 221  ]
{
"493
[; ;function.c: 493:             clcd_write(0x01, 0);
[e ( _clcd_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"495
[; ;function.c: 495:             clcd_putch(*attempt + '0', (0x80 + 0));
[e ( _clcd_putch (2 , -> + *U _attempt -> 48 `ui `uc -> + -> 128 `i -> 0 `i `uc ]
"496
[; ;function.c: 496:             clcd_print(" attempts left", (0x80 + 1));
[e ( _clcd_print (2 , :s 44C -> + -> 128 `i -> 1 `i `uc ]
"497
[; ;function.c: 497:             _delay((unsigned long)((1000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"498
[; ;function.c: 498:         }
}
[e :U 221 ]
"499
[; ;function.c: 499:         return 0;
[e ) -> 0 `i ]
[e $UE 214  ]
"500
[; ;function.c: 500:     }
}
[e :U 220 ]
"501
[; ;function.c: 501: }
[e :UE 214 ]
}
[a 38C 115 117 99 99 101 115 115 102 117 108 108 121 0 ]
[a 32C 83 117 99 99 101 115 115 102 117 108 108 121 0 ]
[a 44C 32 97 116 116 101 109 112 116 115 32 108 101 102 116 0 ]
[a 21C 80 97 115 115 119 111 114 100 32 105 115 0 ]
[a 24C 77 105 115 109 97 116 99 104 0 ]
[a 41C 67 111 114 114 101 99 116 32 112 97 115 115 119 111 114 100 0 ]
[a 7C 82 101 115 116 32 80 97 115 115 119 111 114 100 0 ]
[a 8C 82 101 115 116 32 80 97 115 115 119 111 114 100 0 ]
[a 19C 82 101 69 110 116 101 114 32 80 97 115 115 119 111 114 100 0 ]
[a 23C 80 97 115 115 119 111 114 100 0 ]
[a 31C 84 105 109 101 32 99 104 97 110 103 101 100 0 ]
[a 22C 67 104 97 110 103 101 100 0 ]
[a 37C 108 111 103 115 32 100 111 119 110 108 111 97 100 101 100 0 ]
[a 14C 35 32 84 73 77 69 32 32 32 32 32 69 86 32 83 80 0 ]
[a 1C 32 32 84 73 77 69 32 32 32 32 69 86 32 32 83 80 0 ]
[a 10C 42 0 ]
[a 12C 42 0 ]
[a 30C 84 105 109 101 32 40 72 72 58 77 77 58 83 83 41 0 ]
[a 16C 97 114 101 32 102 111 117 110 100 33 0 ]
[a 15C 32 78 111 32 108 111 103 115 32 0 ]
[a 5C 68 111 119 110 108 111 97 100 32 108 111 103 32 0 ]
[a 6C 68 111 119 110 108 111 97 100 32 108 111 103 32 0 ]
[a 42C 87 114 111 110 103 32 112 97 115 115 119 111 114 100 32 0 ]
[a 17C 32 69 110 116 101 114 32 80 97 115 115 119 111 114 100 32 0 ]
[a 39C 32 69 110 116 101 114 32 80 97 115 115 119 111 114 100 32 0 ]
[a 36C 108 111 103 115 32 99 108 101 97 114 101 100 32 0 ]
[a 3C 67 108 101 97 114 32 76 111 103 115 32 32 32 0 ]
[a 4C 67 108 101 97 114 32 76 111 103 115 32 32 32 0 ]
[a 9C 82 101 115 101 116 32 84 105 109 101 32 32 32 0 ]
[a 2C 86 105 101 119 32 76 111 103 115 32 32 32 32 0 ]
[a 26C 46 32 32 32 32 32 32 0 ]
[a 18C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 20C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 40C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 43C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 28C 32 32 32 32 32 0 ]
[a 27C 32 32 32 0 ]
[a 33C 32 32 0 ]
[a 34C 32 32 0 ]
[a 35C 32 32 0 ]
[a 11C 32 0 ]
[a 13C 32 0 ]
[a 25C 83 82 46 110 111 46 32 32 84 105 109 101 32 32 32 32 32 32 71 101 97 114 32 32 83 112 101 101 100 10 13 0 ]
[a 29C 76 111 103 32 100 111 119 110 108 111 97 100 32 99 111 109 112 108 101 116 101 46 13 10 0 ]
